{
    "openapi": "3.0.0",
    "info": {
        "title": "Todo List API",
        "description": "Documentation for your API",
        "contact": {
            "name": "Roman",
            "email": "nrnwest@email.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Creates a new user account with the provided name, email, and password.",
                "operationId": "register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "The name of the user.",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "description": "The email address of the user.",
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "description": "The password for the user account.",
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "description": "The confirmation of the password.",
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "description": "The access token for the newly registered user.",
                                            "type": "string",
                                            "example": "token_string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message describing the validation failure.",
                                            "type": "string"
                                        },
                                        "errors": {
                                            "description": "Object containing validation errors.",
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Log in as an existing user",
                "description": "demo user in system",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "The email address of the user.",
                                        "type": "string",
                                        "format": "email",
                                        "example": "demo@demo.com"
                                    },
                                    "password": {
                                        "description": "The password for the user account.",
                                        "type": "string",
                                        "example": "demo"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "description": "The access token for the logged-in user.",
                                            "type": "string",
                                            "example": "token_string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message indicating authentication failure.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/tasks": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Filter and sort tasks using query parameters",
                "description": "Get tasks of the authenticated user with filters and sorting.",
                "operationId": "filterTasks",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Task status (e.g., 'todo', 'done')",
                        "required": false
                    },
                    {
                        "name": "priority",
                        "in": "query",
                        "description": "Task priority (1 to 5)",
                        "required": false
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "full text search by title and description",
                        "required": false
                    },
                    {
                        "name": "created_at",
                        "in": "query",
                        "description": "Order to sort by created_at ('asc' or 'desc')",
                        "required": false
                    },
                    {
                        "name": "completed_at",
                        "in": "query",
                        "description": "Order to sort by completed_at ('asc' or 'desc')",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "todo"
                                                    },
                                                    "priority": {
                                                        "type": "integer",
                                                        "example": 3
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Project X"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Task details here"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-05-04T10:00:00Z"
                                                    },
                                                    "completed_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": null,
                                                        "nullable": true
                                                    },
                                                    "subtasks": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Store a newly created resource in storage",
                "description": "Create a new task",
                "operationId": "store",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "description",
                                    "priority",
                                    "status"
                                ],
                                "properties": {
                                    "title": {
                                        "description": "Title of the task",
                                        "type": "string",
                                        "default": "Title"
                                    },
                                    "description": {
                                        "description": "Description of the task",
                                        "type": "string",
                                        "default": "Description"
                                    },
                                    "parent_id": {
                                        "description": "Parent ID of the task",
                                        "type": "integer",
                                        "default": null,
                                        "nullable": true
                                    },
                                    "priority": {
                                        "description": "Priority of the task on a scale of 1-5",
                                        "type": "integer",
                                        "default": 1
                                    },
                                    "status": {
                                        "description": "Status of the task, either 'todo' or 'done'",
                                        "type": "string",
                                        "default": "todo"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Task created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/tasks/{id}": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Retrieve a specific task by ID",
                "description": "Fetch the details of a specific task using its unique identifier.",
                "operationId": "showTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the task to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "todo"
                                                },
                                                "priority": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Finish project X"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Complete all tasks related to\n     *                                                      project X."
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-05-04T10:00:00Z"
                                                },
                                                "completed_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": null,
                                                    "nullable": true
                                                },
                                                "subtasks": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Task not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Update the specified resource in storage",
                "description": "Update a specific task",
                "operationId": "updateTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the task",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "todo",
                                            "done"
                                        ],
                                        "example": "todo"
                                    },
                                    "priority": {
                                        "type": "integer",
                                        "maximum": 5,
                                        "minimum": 1,
                                        "example": 3
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "Finish documentation"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Complete the documentation for task\n     *                                                   management feature"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Task updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Task not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Remove the specified resource from storage",
                "description": "Delete a specific task",
                "operationId": "destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the task",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/v1/tasks/{id}/complete": {
            "patch": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Mark the specified task as complete",
                "description": "Update the completion status of a specific task",
                "operationId": "completeTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the task",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "completed": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "sanctum": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "security": [
        {
            "sanctum": []
        }
    ]
}